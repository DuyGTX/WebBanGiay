// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebBanGiay.Models;

#nullable disable

namespace WebBanGiay.Migrations
{
    [DbContext(typeof(DbwebGiayOnlineContext))]
    [Migration("20241119234124_UpdateQuantity")]
    partial class UpdateQuantity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("WebBanGiay.Models.AppUserModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebBanGiay.Models.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("brand_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandId"), 1L, 1);

                    b.Property<string>("BrandName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("brand_name");

                    b.HasKey("BrandId")
                        .HasName("PK__brand__5E5A8E273CA2B74C");

                    b.ToTable("brand", (string)null);
                });

            modelBuilder.Entity("WebBanGiay.Models.Colour", b =>
                {
                    b.Property<int>("ColourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("colour_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColourId"), 1L, 1);

                    b.Property<string>("ColourName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("colour_name");

                    b.HasKey("ColourId")
                        .HasName("PK__colour__38955022F3DFA4F0");

                    b.ToTable("colour", (string)null);
                });

            modelBuilder.Entity("WebBanGiay.Models.Coupon", b =>
                {
                    b.Property<int>("CouponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("coupon_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CouponId"), 1L, 1);

                    b.Property<string>("CouponCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("coupon_code");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("discount_amount");

                    b.Property<decimal?>("DiscountPercentage")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("discount_percentage");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("date")
                        .HasColumnName("valid_from");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("date")
                        .HasColumnName("valid_to");

                    b.HasKey("CouponId")
                        .HasName("PK__coupon__58CF63895EE0BE10");

                    b.HasIndex(new[] { "CouponCode" }, "UQ__coupon__ADE5CBB7EF1D0423")
                        .IsUnique()
                        .HasFilter("[coupon_code] IS NOT NULL");

                    b.ToTable("coupon", (string)null);
                });

            modelBuilder.Entity("WebBanGiay.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CusAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("cus_address");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone_number");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.HasKey("CustomerId")
                        .HasName("PK__customer__CD65CB85B82E4FE8");

                    b.HasIndex(new[] { "Email" }, "UQ__customer__AB6E61644AEADEE4")
                        .IsUnique();

                    b.ToTable("customer", (string)null);
                });

            modelBuilder.Entity("WebBanGiay.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("OrderCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ShoeId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ShoeId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("WebBanGiay.Models.OrderModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WebBanGiay.Models.ProductQuantityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ShoeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductQuantities");
                });

            modelBuilder.Entity("WebBanGiay.Models.ShippingAddress", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("address_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"), 1L, 1);

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("country");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("postal_code");

                    b.Property<string>("State")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("state");

                    b.Property<string>("StreetAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("street_address");

                    b.HasKey("AddressId")
                        .HasName("PK__shipping__CAA247C82568C55C");

                    b.HasIndex("CustomerId");

                    b.ToTable("shipping_address", (string)null);
                });

            modelBuilder.Entity("WebBanGiay.Models.Shoe", b =>
                {
                    b.Property<int>("ShoeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("shoe_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShoeId"), 1L, 1);

                    b.Property<int?>("BrandId")
                        .HasColumnType("int")
                        .HasColumnName("brand_id");

                    b.Property<string>("CareInstructions")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("care_instructions");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("price");

                    b.Property<decimal?>("SalePrice")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("sale_price");

                    b.Property<string>("ShoeDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("shoe_description");

                    b.Property<string>("ShoeName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("shoe_name");

                    b.Property<string>("Sku")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sku");

                    b.HasKey("ShoeId")
                        .HasName("PK__shoe__3AC0314EB0506C92");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("shoe", (string)null);
                });

            modelBuilder.Entity("WebBanGiay.Models.ShoeCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<int?>("BrandId")
                        .HasColumnType("int")
                        .HasColumnName("brand_id");

                    b.Property<string>("CategoryName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("category_name");

                    b.HasKey("CategoryId")
                        .HasName("PK__shoe_cat__D54EE9B4FFA3D24E");

                    b.HasIndex("BrandId");

                    b.ToTable("shoe_category", (string)null);
                });

            modelBuilder.Entity("WebBanGiay.Models.ShoeColour", b =>
                {
                    b.Property<int>("ShoeId")
                        .HasColumnType("int")
                        .HasColumnName("shoe_id");

                    b.Property<int>("ColourId")
                        .HasColumnType("int")
                        .HasColumnName("colour_id");

                    b.Property<int?>("StockQuantity")
                        .HasColumnType("int")
                        .HasColumnName("stock_quantity");

                    b.HasKey("ShoeId", "ColourId")
                        .HasName("PK__shoe_col__0949644C695F25A2");

                    b.HasIndex("ColourId");

                    b.ToTable("shoe_colour", (string)null);
                });

            modelBuilder.Entity("WebBanGiay.Models.ShoeImage", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("image_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"), 1L, 1);

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image_url");

                    b.Property<int?>("ShoeId")
                        .HasColumnType("int")
                        .HasColumnName("shoe_id");

                    b.HasKey("ImageId")
                        .HasName("PK__shoe_ima__DC9AC955AFF94A72");

                    b.HasIndex("ShoeId");

                    b.ToTable("shoe_image", (string)null);
                });

            modelBuilder.Entity("WebBanGiay.Models.ShoeSize", b =>
                {
                    b.Property<int>("ShoeId")
                        .HasColumnType("int")
                        .HasColumnName("shoe_id");

                    b.Property<int>("SizeId")
                        .HasColumnType("int")
                        .HasColumnName("size_id");

                    b.Property<int?>("StockQuantity")
                        .HasColumnType("int")
                        .HasColumnName("stock_quantity");

                    b.HasKey("ShoeId", "SizeId")
                        .HasName("PK__shoe_siz__3A1C9DAD0EBF47AA");

                    b.HasIndex("SizeId");

                    b.ToTable("shoe_size", (string)null);
                });

            modelBuilder.Entity("WebBanGiay.Models.Size", b =>
                {
                    b.Property<int>("SizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("size_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SizeId"), 1L, 1);

                    b.Property<string>("SizeName")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("size_name");

                    b.HasKey("SizeId")
                        .HasName("PK__size__0DCACE31C597D616");

                    b.ToTable("size", (string)null);
                });

            modelBuilder.Entity("WebBanGiay.Models.OrderDetail", b =>
                {
                    b.HasOne("WebBanGiay.Models.Shoe", "shoe")
                        .WithMany()
                        .HasForeignKey("ShoeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("shoe");
                });

            modelBuilder.Entity("WebBanGiay.Models.ShippingAddress", b =>
                {
                    b.HasOne("WebBanGiay.Models.Customer", "Customer")
                        .WithMany("ShippingAddresses")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__shipping___custo__5EBF139D");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("WebBanGiay.Models.Shoe", b =>
                {
                    b.HasOne("WebBanGiay.Models.Brand", "Brand")
                        .WithMany("Shoes")
                        .HasForeignKey("BrandId")
                        .HasConstraintName("FK__shoe__brand_id__3D5E1FD2");

                    b.HasOne("WebBanGiay.Models.ShoeCategory", "Category")
                        .WithMany("Shoes")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__shoe__category_i__3C69FB99");

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WebBanGiay.Models.ShoeCategory", b =>
                {
                    b.HasOne("WebBanGiay.Models.Brand", "Brand")
                        .WithMany("ShoeCategories")
                        .HasForeignKey("BrandId")
                        .HasConstraintName("FK__shoe_cate__brand__398D8EEE");

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("WebBanGiay.Models.ShoeColour", b =>
                {
                    b.HasOne("WebBanGiay.Models.Colour", "Colour")
                        .WithMany("ShoeColours")
                        .HasForeignKey("ColourId")
                        .IsRequired()
                        .HasConstraintName("FK__shoe_colo__colou__7C1A6C5A");

                    b.HasOne("WebBanGiay.Models.Shoe", "Shoe")
                        .WithMany("ShoeColours")
                        .HasForeignKey("ShoeId")
                        .IsRequired()
                        .HasConstraintName("FK__shoe_colo__shoe___7D0E9093");

                    b.Navigation("Colour");

                    b.Navigation("Shoe");
                });

            modelBuilder.Entity("WebBanGiay.Models.ShoeImage", b =>
                {
                    b.HasOne("WebBanGiay.Models.Shoe", "Shoe")
                        .WithMany("ShoeImages")
                        .HasForeignKey("ShoeId")
                        .HasConstraintName("FK__shoe_imag__shoe___48CFD27E");

                    b.Navigation("Shoe");
                });

            modelBuilder.Entity("WebBanGiay.Models.ShoeSize", b =>
                {
                    b.HasOne("WebBanGiay.Models.Shoe", "Shoe")
                        .WithMany("ShoeSizes")
                        .HasForeignKey("ShoeId")
                        .IsRequired()
                        .HasConstraintName("FK__shoe_size__shoe___00DF2177");

                    b.HasOne("WebBanGiay.Models.Size", "Size")
                        .WithMany("ShoeSizes")
                        .HasForeignKey("SizeId")
                        .IsRequired()
                        .HasConstraintName("FK__shoe_size__size___7FEAFD3E");

                    b.Navigation("Shoe");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("WebBanGiay.Models.Brand", b =>
                {
                    b.Navigation("ShoeCategories");

                    b.Navigation("Shoes");
                });

            modelBuilder.Entity("WebBanGiay.Models.Colour", b =>
                {
                    b.Navigation("ShoeColours");
                });

            modelBuilder.Entity("WebBanGiay.Models.Customer", b =>
                {
                    b.Navigation("ShippingAddresses");
                });

            modelBuilder.Entity("WebBanGiay.Models.Shoe", b =>
                {
                    b.Navigation("ShoeColours");

                    b.Navigation("ShoeImages");

                    b.Navigation("ShoeSizes");
                });

            modelBuilder.Entity("WebBanGiay.Models.ShoeCategory", b =>
                {
                    b.Navigation("Shoes");
                });

            modelBuilder.Entity("WebBanGiay.Models.Size", b =>
                {
                    b.Navigation("ShoeSizes");
                });
#pragma warning restore 612, 618
        }
    }
}
